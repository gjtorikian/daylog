{"ts":1352432594037,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/**\n * Your extension for Cloud9 IDE!\n * \n * Loads an iFrame inside a file tab\n */\ndefine(function(require, exports, module) {\n\nvar ext = require(\"core/ext\");\nvar editors = require(\"ext/editors/editors\");\nvar menus = require(\"ext/menus/menus\");\nvar markup = require(\"text!./strider.xml\");\n\nmodule.exports = ext.register(\"ext/strider/strider\", {\n    name           : \"strider\",\n    dev            : \"You\",\n    alone          : true,\n    type           : ext.EDITOR,\n    deps           : [editors],\n    markup         : markup,\n    iFrameUrl      : \"https://striderapp.com/\",\n    fileExtensions : [\"#!uniqueextensionstrider\"],\n    counter        : 0,\n\n    nodes : [],\n\n    init : function(){\n        this.iFrameContainer = window[\"barIframestrider\"].firstChild.$ext;\n\n        var editor = window[\"barIframestrider\"];\n        editor.show();\n        this.barIframe = this.amlEditor = editor;\n    },\n    \n    createNewFileiFrame : function(){\n        editors.gotoDocument({\n            path: \"iFrame\" + ++this.counter + \".\" + this.fileExtensions[0],\n            type: \"nofile\"\n        });\n    },\n    \n    setDocument : function(doc){\n        doc.session = doc.getNode().getAttribute(\"path\");\n        this.barIframe.setProperty(\"value\", apf.escapeXML(doc.session));\n        if (!doc.isInited) {\n            this.iFrameContainer.setAttribute(\"src\", this.iFrameUrl);\n            doc.isInited = true;\n            doc.dispatchEvent(\"init\");\n        }\n    },\n    \n    focus : function(){\n        this.barIframe.focus();\n        var page = tabEditors.getPage();\n        if (!page) return;\n\n        //var doc = page.$doc;\n    },\n\n    hook : function(){\n        var _self = this;\n        this.nodes.push(\n            menus.addItemByPath(\"Tools/strider\", new apf.item({\n                onclick : function(){\n                    _self.createNewFileiFrame();\n                },\n                isAvailable : function(editor){\n                    return true;\n                }\n            }), 5400)\n        );\n    },\n\n    enable : function(){\n        this.nodes.each(function(item){\n            item.enable();\n        });\n    },\n\n    disable : function(){\n        this.nodes.each(function(item){\n            item.disable();\n        });\n    },\n\n    destroy : function(){\n        this.nodes.each(function(item){\n            item.destroy(true, true);\n        });\n        this.nodes = [];\n    }\n});\n\n});"]],"start1":0,"start2":0,"length1":0,"length2":2382}]],"length":2382}
